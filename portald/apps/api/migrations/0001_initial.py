# Generated by Django 3.1.5 on 2021-01-11 20:44

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='ambiente')),
            ],
            options={
                'verbose_name_plural': 'Ambientes',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_ip', models.CharField(blank=True, max_length=16, null=True, verbose_name='ip privado')),
                ('public_ip', models.CharField(blank=True, max_length=16, null=True, verbose_name='ip público')),
                ('os_name', models.CharField(max_length=40, verbose_name='os.name')),
                ('arch', models.CharField(max_length=30, verbose_name='arch')),
                ('platform', models.CharField(max_length=100, verbose_name='platform')),
                ('processor', models.CharField(max_length=80)),
                ('hostname', models.CharField(blank=True, max_length=125, unique=True)),
                ('ram', models.FloatField(verbose_name='RAM')),
                ('cores', models.IntegerField(verbose_name='physical cores')),
                ('frequency', models.FloatField(blank=True, null=True, verbose_name='current frequency')),
                ('equipment', models.CharField(blank=True, choices=[('virtual', 'Virtual Machine'), ('real', 'Physical Machine'), ('docker', 'Container Docker')], max_length=30, null=True, verbose_name='equipamento')),
                ('environment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.environment')),
            ],
            options={
                'verbose_name_plural': 'Hosts',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='service')),
                ('ip', models.CharField(blank=True, max_length=16, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('dns', models.CharField(blank=True, max_length=120, null=True)),
            ],
            options={
                'verbose_name_plural': 'Serviços',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=100, null=True, verbose_name='subject')),
                ('timestamp', models.CharField(blank=True, default=time.time, max_length=30)),
                ('msg', models.TextField(verbose_name='message')),
                ('read', models.BooleanField(blank=True, default=False, null=True, verbose_name='lido')),
                ('deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('read_in', models.DateTimeField(blank=True, null=True)),
                ('read_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Anotações',
            },
        ),
        migrations.CreateModel(
            name='Locator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locator', models.CharField(max_length=20)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('speed', models.IntegerField(blank=True, null=True)),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.host')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enterprise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='management.client')),
            ],
            options={
                'verbose_name_plural': 'Inventários',
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='instance name')),
                ('database', models.CharField(blank=True, max_length=125, null=True)),
                ('private_ip', models.CharField(blank=True, max_length=16, null=True, verbose_name='ip privado')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.host')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.service')),
            ],
            options={
                'verbose_name_plural': 'Instâncias',
            },
        ),
        migrations.AddField(
            model_name='host',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.service'),
        ),
        migrations.AddField(
            model_name='environment',
            name='inventory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.inventory'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=254, null=True, verbose_name='comment text')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('updated_at', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('commented_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='commented by')),
                ('note', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.note')),
            ],
            options={
                'verbose_name_plural': 'Comentários',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.host')),
            ],
            options={
                'verbose_name_plural': 'Aplicações',
            },
        ),
    ]
